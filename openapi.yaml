openapi: 3.0.0
info:
  version: 1.0.0
  title: Tweeter API
  contact:
   email: mo.pm@icloud.com
"servers": [
  {
    "url": "http://localhost:8080",
    "description": "Localhost"
  }
]
paths:
  /v1/users/create:
    post:
      tags:
        - Users
      summary: Create User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error

  /v1/users/login:
    post:
      tags:
        - Users
      summary: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '400':
          description: Invalid email or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorResponse'
        '500':
          description: Internal Server Error

  /v1/logout:
    get:
      tags:
        - Users
      summary: Logout User
      description: Endpoint to log out a user.
      parameters:
        - name: X-API-KEY
          in: header
          description: API Key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logged out successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.

  /v1/users/:
    get:
      tags:
        - Users
      summary: Get Current User Profile
      security:
        - apiKey: [ ]
      responses:
        '200':
          description: Current User Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserProfile'
        '500':
          description: Internal Server Error
  /v1/users/profile/{id}:
    get:
      tags:
        - Users
      summary: Get User Profile
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Current User Profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '500':
          description: Internal Server Error


  /v1/users:
    patch:
      tags:
        - Users
      summary: Edit User Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfile'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /v1/users/reset-password:
    post:
      tags:
        - Users
      summary: Reset User Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error

  /v1/users/follow:
    post:
      tags:
        - Users
      summary: Follow User
      security:
        - apiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersFollow'
      responses:
        '200':
          description: User followed successfully
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /v1/users/unfollow:
    post:
      tags:
        - Users
      summary: Unfollow User
      security:
        - apiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersFollow'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /v1/tweets/craete:
    post:
      tags:
        - Tweets
      summary: Create Tweet
      security:
        - apiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetRequest'
      responses:
        '201':
          description: Tweet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        '400':
          description: Invalid tweet data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error



  /v1/tweets/{id}:
    get:
      tags:
        - Tweets
      summary: Get Tweet by ID
      parameters:
        - name: id
          in: path
          description: Tweet ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tweet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweet'
        '500':
          description: Internal Server Error






  v1/tweets/{id_tweet}/like:
      post:
        tags:
          - Tweets
        summary: Like a tweet
        parameters:
          - name: id_tweet
            in: path
            description: ID of the tweet to like
            required: true
            schema:
              type: integer
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweeter_like'
        responses:
          '200':
            description: Tweet liked successfully
          '400':
            description: Bad request
          '500':
            description: Internal server error
  v1/tweets/{id_tweet}/unlike:
    delete:
      tags:
        - Tweets
      summary: Unlike a tweet
      parameters:
        - name: id_tweet
          in: path
          description: ID of the tweet to like
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tweeter_like'
      responses:
        '200':
          description: Tweet unliked successfully
        '400':
          description: Bad request
        '500':
          description: Internal server error


  /v1/tweets/{id_tweet}/retweet:
    post:
      tags:
        - Tweets
      summary: Retweet a tweet
      parameters:
        - in: path
          name: id_tweet
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retweet successful
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Tweet not found
        '500':
          description: Internal server error
  /v1/tweets/{id_tweet}/delete:
    delete:
      tags:
        - Tweets
      summary: Delete a tweet
      parameters:
        - in: path
          name: id_tweet
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retweet successful
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Tweet not found
        '500':
          description: Internal server error


components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          format: name
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        birthdate:
          type: string
          format: date

    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    AuthSuccessResponse:
      type: object
      properties:
        accessToken:
          type: string
    AuthErrorResponse:
      type: object
      properties:
        error:
          type: string
    LogoutResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    UserProfile:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    GetUserProfile:
      type: object
      properties:
        name:
          type: string
        birthdate:
          type: string
          format: data-time
        nickname:
          type: string
        bio:
          type: string
        location:
          type: string
        followers:
          type: integer
        subscription:
          type: integer


    UpdateUserProfile:
      type: object
      properties:
        email:
          type: string
          format: email
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
    ResetPasswordResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
    UsersFollow:
      type: object
      properties:
        id:
          type: integer
    UsersunFollow:
      type: object
      properties:
        id2:
          type: string
    Tweet:
        type: object
        properties:
          tweet_id:
            type: integer
          user_id:
            type: integer
          text:
            type: string
          created_at:
            type: string
            format: date-time
          public:
            type: boolean
          only_followers:
            type: boolean
          only_mutual_followers:
            type: boolean
          only_me:
            type: boolean
          parent_tweet_id:
            type: integer
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    TweetRequest:
        type: object
        properties:
          text:
            type: string
          public:
            type: boolean
          only_followers:
            type: boolean
          only_mutual_followers:
            type: boolean
          only_me:
            type: boolean
        required:
          - text
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-KEY